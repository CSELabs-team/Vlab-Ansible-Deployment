---

- name: Run the equivalent of "apt-get update" as a separate step
  apt: update_cache=yes

- name: Upgrade apt cache
  apt: upgrade=yes

- name: Update all packages to the latest version
  apt: upgrade=dist

- name: Install list of packages
  apt: pkg={{item}} state=installed
  with_items:
    - bridge-utils
    - vlan
    - ifenslave
    - glusterfs-client
    - xen-hypervisor-amd64
    - nfs-common

- name: Configure /etc/hosts
  lineinfile: dest=/etc/hosts line="{{ item }}"
  with_items:
    - '192.168.35.1 Vlab-vital'
    - '192.168.35.11 Vlab-gluster1'
    - '192.168.35.22 Vlab-gluster2'
    - '192.168.35.33 Vlab-xen1'
    - '192.168.35.44 Vlab-xen2'
    - '192.168.35.55 Vlab-xen3'
    - '192.168.35.66 Vlab-xen4'
    - '192.168.35.77 Vlab-xen5'
    - '192.168.35.99 Vlab-backup'

- name: Creates directories
  file: path={{ item }} state=directory owner=root group=root mode=755
  with_items:
  - "/bld-startup"
  - "/mnt/vlab-datastore"
  - "/home/local_blade"

- name: copy the files to /bld-startup
  copy: src=bld-startup/ dest=/bld-startup/ mode=755

- name: Configure /etc/fstab on clients for gluster server
  mount: name="{{ item.dest }}" src="{{ item.source }}" fstype=glusterfs opts="defaults,_netdev" state=present
  with_items:
    - { dest: '/mnt/vlab-datastore', source: 'Vlab-gluster1:/vlab' }
  ignore_errors: yes

- name: Create soft links for datastore
  file: src="{{ item.src }}" dest="{{ item.dest }}" mode=755 state=link force=yes
  with_items:
  - { src: '/mnt/vlab-datastore/OS_images', dest: '/home/OS_images' }
  - { src: '/mnt/vlab-datastore/vmdsk', dest: '/home/vmdsk' }
  - { src: '/mnt/vlab-datastore/vlab_scp', dest: '/home/vlab_scp' }
  - { src: '/mnt/vlab-datastore/OS_images', dest: '/home/local_blade/OS_images' }
  - { src: '/mnt/vlab-datastore/OS_images', dest: '/home/vmdsk/base_images'}

- name: configure /etc/fstab mount Vlab-backup
  mount: name=/home/backup src=Vlab-backup:/mnt/backup/ fstype=nfs opts="async,hard,intr,rw,nolock" state=mounted
  tags:
    - nfs
  ignore_errors: yes

- name: Creates an entry like "@reboot /some/job.sh"
  cron: name="Startup script" special_time=reboot job="/bld-startup/bld-network-startup.sh"

- name: Enable the modules
  modprobe: name={{ item }} state=present
  with_items:
    - "8021q"
    #- "bonding"

- name: Configure /etc/modules file
  lineinfile: dest=/etc/modules line="{{ item }}"
  with_items:
    - '802.1q'
    #- 'bonding'

#- name: Configure /etc/default/grub file (tuning Xen Dom0)
#  lineinfile: dest=/etc/default/grub regexp="{{ item.old }}" line="{{ item.new }}"
#  with_items:
#    - { old: '^GRUB_CMDLINE_XEN=', new: 'GRUB_CMDLINE_XEN="dom0_mem=16G,max:16G dom0_max_vcpus=4 dom0_vcpus_pin iommu=1 loglvl=all guest_loglvl=all com1=9600,8n1,0x3e8,5 console=com1,vga"' }
#    - { old: '^GRUB_CMDLINE_LINUX=', new: 'GRUB_CMDLINE_LINUX="loglevel=9 console=ttyS0 earlyprintk=xen"' }
#    - { old: '^GRUB_TERMINAL=', new: 'GRUB_TERMINAL="console serial"' }
#  ignore_errors: yes

#- name: update-grub
#  raw: update-grub

#- name: Reboot
#  command: /sbin/shutdown -r now
